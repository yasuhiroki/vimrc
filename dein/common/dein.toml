###################
# dein.vim
###################
[[plugins]]
repo = 'Shougo/dein.vim'


###################
# Theme
###################
[[plugins]]
repo = 'altercation/vim-colors-solarized'
merged = 0


###################
# Lint
###################
[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
let g:ale_disable_lsp = 1
let g:ale_linter_aliases = {
\   'gina-commit': ['markdown'],
\}
let g:ale_fixers = {
\   'javascript': ['prettier-eslint'],
\   'json': ['prettier'],
\   'css': ['prettier'],
\   'scss': ['prettier'],
\   'ruby': ['rubocop'],
\}

let g:ale_pattern_options = {
\ '\..*\.js$': {'ale_linters': [], 'ale_fixers': []},
\ '\..*\.css$': {'ale_linters': [], 'ale_fixers': []},
\}
let g:ale_pattern_options_enabled = 1

nmap <silent> <C-j> <Plug>(ale_next_wrap)
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
'''

###################
# LSP
###################
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    setlocal signcolumn=yes
    nmap <buffer> gd <plug>(lsp-definition)
    nmap <buffer> <f2> <plug>(lsp-rename)
endfunction

augroup lsp_install
    au!
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
'''
[[plugins]]
repo = 'mattn/vim-lsp-settings'
hook_add = '''
let g:lsp_settings = {
\   'yaml-language-server': {
\       'allowlist': ['yaml', 'yaml.circleci', 'yaml.gha'],
\       'workspace_config': {
\           'yaml': {
\               'schemas': {
\                   'https://json.schemastore.org/circleciconfig.json': ['.circleci/config.yml'],
\                   'https://json.schemastore.org/github-action.json': ['.github/actions/*.yml']
\               }
\           }
\      }
\   }
\}
'''
[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
hook_add = '''
imap <expr> <C-j> vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)' : '<C-j>'
smap <expr> <C-j> vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)' : '<C-j>'
imap <expr> <C-k> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)' : '<C-k>'
smap <expr> <C-k> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)' : '<C-k>'

nmap        s   <Plug>(vsnip-select-text)
xmap        s   <Plug>(vsnip-select-text)
nmap        S   <Plug>(vsnip-cut-text)
xmap        S   <Plug>(vsnip-cut-text)

let g:vsnip_filetypes = {}
'''
[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
[[plugins]]
repo = 'rafamadriz/friendly-snippets'


###################
# Git
###################
[[plugins]]
repo = 'lambdalisue/gina.vim'
hook_add = '''
    set statusline=%=\ %{gina#component#repo#preset()}[%{(&fenc!=''?&fenc:&enc)}/%{&ff}]\[%Y]\[%04l,%03v][%p%%]
    call gina#custom#mapping#nmap(
            \ 'blame', 'dd',
            \ '<Plug>(gina-changes-of-above)'
            \)
    call gina#custom#mapping#nmap(
            \ 'blame', 'o',
            \ '<Plug>(gina-browse)'
            \)
'''


###################
# Zshef
###################
[[plugins]]
repo = 'yasuhiroki/zshef.vim'

