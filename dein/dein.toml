[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
depends = ['Shougo/vimproc.vim']
hook_add = '''
    let g:quickrun_config = {
        \ "_": {"runner": "vimproc"},
        \ }
nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_source = '''
    set statusline=%=\ %{fugitive#statusline()}[%{(&fenc!=''?&fenc:&enc)}/%{&ff}]\[%Y]\[%04l,%03v][%p%%]
'''

[[plugins]]
repo = 'cohama/agit.vim'

[[plugins]]
repo = 'idanarye/vim-merginal'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
let g:ctrlp_use_migemo = 1 " Don't install migemo yet
let g:ctrlp_clear_cache_on_exit = 0   " Doesn't cache clear when vim quit
let g:ctrlp_mruf_max            = 500 " Max memorable mru
let g:ctrlp_open_new_file       = 1   " Open new file as tab

set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows

let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ }
'''

[[plugins]]
repo = 'nixprime/cpsm'
build = 'PY3=ON bash install.sh'
depends = ['ctrlp.vim']
hook_add = '''
if dein#util#_is_mac()
else
    let g:ctrlp_match_func = {'match': 'cpsm#CtrlPMatch'}
endif
'''

[[plugins]]
repo = 'rking/ag.vim'
hook_add = '''
if executable('ag')
    let g:ctrlp_use_caching = 0
    let g:ctrlp_user_command = 'ag %s -i --nocolor --nogroup -g ""'
endif
'''

[[plugins]]
repo = 'vim-syntastic/syntastic'
hook_add = '''
let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': ['ruby', 'javascript', 'typescript'] }
let g:syntastic_ruby_checkers = ['rubocop']
let g:syntastic_javascript_checkers=['eslint']
'''

[[plugins]]
repo = "aklt/plantuml-syntax"

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'yasuhiroki/vim-plantuml-snippets'

[[plugins]]
repo = 'yasuhiroki/vim-aws-plantuml-snippets'
depends = ['yasuhiroki/vim-plantuml-snippets']

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'vim-scripts/buftabs'
hook_add = '''
let g:buftabs_only_basename = 1
let g:buftabs_in_statusline = 1
let g:buftabs_active_highlight_group="Visual"
'''

[[plugins]]
repo = 'junegunn/vim-easy-align.git'
hook_add = '''
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup=1
'''

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'altercation/vim-colors-solarized'
merged = 0

[[plugins]]
repo = 'LucHermitte/lh-vim-lib'

[[plugins]]
repo = 'LucHermitte/local_vimrc'
depends = ['LucHermitte/lh-vim-lib']

[[plugins]]
repo = 'soramugi/auto-ctags.vim'
hook_add = '''
let g:auto_ctags = 1
let g:auto_ctags_directory_list = ['.git', '.svn']
'''

[[plugins]]
repo = 'heavenshell/vim-jsdoc'

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
hook_add = '''
let g:gfm_syntax_emoji_conceal = 1
'''

[[plugins]]
repo = 'liquidz/vivi.vim'
[[plugins]]
repo = 'elixir-lang/vim-elixir'
[[plugins]]
repo = 'thinca/vim-ref'
