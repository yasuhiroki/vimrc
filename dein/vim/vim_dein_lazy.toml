###################
# TOML
###################
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']


###################
# HTML / CSS
###################
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'xml', 'markdown']

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css', 'scss', 'sass']


###################
# JavaScript / TypeScript
###################
[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript', 'typescript']

[[plugins]]
repo = 'jason0x43/vim-js-indent'
on_ft = ['javascript', 'typescript', 'html']
hook_source = '''
  let g:js_indent_typescript = 1
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'


###################
# Go-lang
###################
#[[plugins]]
#repo = 'vim-jp/vim-go-extra'
#on_ft = ['go']
#hook_source = '''
#autocmd FileType go autocmd BufWritePre <buffer> Fmt
#'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_source = '''
let g:go_list_type = "quickfix"
let g:go_fmt_autosave = 0
let g:go_fmt_command = "goimports"
let g:go_info_mode = 'gopls'

" run :GoBuild or :GoTestCompile based on the go file
function! s:build_go_files()
  let l:file = expand('%')
  if l:file =~# '^\f\+_test\.go$'
    call go#test#Test(0, 1)
  elseif l:file =~# '^\f\+\.go$'
    call go#cmd#Build(0)
  endif
endfunction

autocmd FileType go nmap <leader>b  :<C-u>call <SID>build_go_files()<CR>
"autocmd FileType go nmap <leader>r  <Plug>(go-run)
autocmd FileType go nmap <leader>t  <Plug>(go-test)
autocmd FileType go nmap <Leader>c  <Plug>(go-coverage-toggle)
autocmd FileType go nmap <Leader>i  <Plug>(go-info)
'''

###################
# Elixir
###################
[[plugins]]
repo = 'elixir-lang/vim-elixir'
on_ft = ['elixir']

[[plugins]]
repo = 'slashmili/alchemist.vim'
on_ft = ['elixir']


###################
# PlantUML
###################
[[plugins]]
repo = "aklt/plantuml-syntax"
on_ft = ['plantuml']

[[plugins]]
repo = 'yasuhiroki/vim-plantuml-snippets'
on_ft = ['plantuml']

[[plugins]]
repo = 'yasuhiroki/vim-aws-plantuml-snippets'
depends = ['vim-plantuml-snippets']
on_ft = ['plantuml']
