#!/bin/bash

#------------------------------------------------------------------
#
#
# Autor: Yasuhiro Kiyota
# Since: YYYY/MM/DD
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#------------------------------------------------------------------

####================------------------------==================#####
# Usage message
####================------------------------==================#####
CMDNAME=`basename $0`
Usage(){
    echo "Usage: $CMDNAME [-ah] <arg1>"
    echo " <option>"
    echo "    -h                  : Show this help. "
    echo "    -a <opt arg>        : description"
    echo " <args>"
    echo "    arg1                : description"
    echo " <example>"
    echo "  $CMDNAME -a exam"
    echo ""
}

####================------------------------==================#####
# Functions {{{
####================------------------------==================#####
Echo(){
    echo "[$CMDNAME] $1"
}

Echo_Line(){
    if [ "$1" = 1 ];then
        mark_line="################################################################################"
    elif [ "$1" = 2 ];then
        mark_line="================================================================================"
    elif [ "$1" = 3 ];then
        mark_line="--------------------------------------------------------------------------------"
    else
        mark_line="********************************************************************************"
    fi  

    echo "$mark_line"
}

Fail(){
    Echo "[ERROR] $1"
    echo ""
    exit 1
}

Get_Program_Directory(){
    PRG="$0"
    while [ -h "$PRG" ] ; do
        ls=`ls -ld "$PRG"`
        link=`expr "$ls" : '.*-> \(.*\)$'`
        if expr "$link" : '/.*' > /dev/null; then
            PRG="$link"
        else
            PRG=`dirname "$PRG"`/"$link"
        fi
    done
    PRGDIR=`dirname "$PRG"`
    
    echo $PRGDIR
}

# }}}
####================------------------------==================#####
# Resolve option.
####================------------------------==================#####
while getopts a:h OPT
do
    case $OPT in
        "a")
            A_VAL=$OPTARG
            ;;
        "h")
            Usage
            exit 1
            ;;
        "*")
            Usage
            exit 1
    esac
done
shift `expr $OPTIND - 1`

####================------------------------==================#####
# Check argument
####================------------------------==================#####
EXPECTED_ARGS_NUM=1
if [ $# -ne $EXPECTED_ARGS_NUM ]; then
    Usage
    Fail "arguments incorrect"
fi

####================------------------------==================#####
# Environment Varrables
####================------------------------==================#####
PRGDIR=`Get_Program_Directory`
line_cnt=100

####================------------------------==================#####
# Body
####================------------------------==================#####
Echo_Line 1
Echo "Script"
Echo_Line 1
